<Page x:Class="DiplomKapustinMaximISP_41.Pages.BaseCoursePg"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:DiplomKapustinMaximISP_41.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="BaseCoursePg" Initialized="Page_Initialized">
    <Grid>
        <Frame Grid.RowSpan="3">
            <Frame.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <LinearGradientBrush.RelativeTransform>
                        <TransformGroup>
                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                            <SkewTransform CenterX="0.5" CenterY="0.5"/>
                            <RotateTransform Angle="-45" CenterX="0.5" CenterY="0.5"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </LinearGradientBrush.RelativeTransform>
                    <GradientStop Color="#FF00D1FF" Offset="1"/>
                    <GradientStop Color="#FF00FF87" Offset="0"/>
                </LinearGradientBrush>
            </Frame.Background>
        </Frame>
        <TabControl x:Name="tabControlMed" Width="770" HorizontalAlignment="Center" Visibility="Visible" IsEnabled="False" FontFamily="Franklin Gothic Medium" Foreground="Black" BorderBrush="Black" Cursor="Arrow" Margin="0,10,0,10">
            <TabControl.Background>
                <SolidColorBrush Color="#FF00CC6C" Opacity="0.5"/>
            </TabControl.Background>
            <TabItem Header="О курсе" Width="70" FontFamily="Franklin Gothic Medium" Background="#FF00FF87" BorderBrush="Black" Cursor="Hand">
                <ScrollViewer Cursor="Arrow">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock VerticalAlignment="Center" Margin="20,10,0,0" FontSize="25" Text="Для вашего уровня владения языком будет преложено пройти следующий план изучения языка C++:" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="20" Grid.Row="1" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Foreground="White"><Run Language="ru-ru" Text="1) Ввведение в массивы."/></TextBlock>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="20" Grid.Row="2" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Foreground="White"><Run Language="ru-ru" Text="2) Указатели."/></TextBlock>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="20" Grid.Row="3" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Foreground="White"><Run Language="ru-ru" Text="3) Продвинутые циклы (range-based for, do-while)."/></TextBlock>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="20" Grid.Row="4" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Foreground="White"><Run Language="ru-ru" Text="4) Контейнер vector."/></TextBlock>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="20" Grid.Row="5" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Foreground="White"><Run Language="ru-ru" Text="5) Написание собственных функций."/></TextBlock>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="20" Grid.Row="6" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Foreground="White"><Run Language="ru-ru" Text="6) Перечисления и объединения (enum, union)."/></TextBlock>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="20" Grid.Row="7" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Foreground="White"><Run Language="ru-ru" Text="7) Ключевое слово return, необязательные параметры функций."/></TextBlock>
                    </Grid>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="№1" Width="50" FontFamily="Franklin Gothic Medium" Background="#FF00FF87" BorderBrush="Black" Cursor="Hand">
                <ScrollViewer Cursor="Arrow">
                    <StackPanel>
                        <RibbonSeparator Height="20">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="20,0" FontSize="20" Grid.Row="1" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Ввведение в массивы." Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
            Text="        Массивы представляют собой структуру данных, которая позволяет хранить набор элементов одного типа под одним именем. Они широко используются в программировании для организации и управления данными."
            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
            Text="        Назначение массивов:"
            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
            Text="        1) Массивы позволяют хранить множество элементов одного типа под одним именем, что облегчает доступ к данным и их обработку;"
            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
            Text="        2) Могут быть использованы для хранения данных различных типов, таких как числа, строки, объекты и другие массивы."
            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
            Text="        3) Массивы обеспечивают удобный доступ к элементам по их индексам, что позволяет эффективно управлять данными."
            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="20">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/arrays.png" Width="533" Height="220" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="5">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
            Text="        	Рисунок 1. Массивы в C++."	                                        
            TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium"  Foreground="White"/>
                        <RibbonSeparator Height="5">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="№2" Width="50" FontFamily="Franklin Gothic Medium" Background="#FF00FF87" BorderBrush="Black" Cursor="Hand">
                <ScrollViewer Cursor="Arrow">
                    <StackPanel>
                        <RibbonSeparator Height="20">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="20,0" FontSize="20" Grid.Row="1"
                   TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Указатели."  Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
            Text="          Указатель в C++ — это переменная, значением которой является адрес ячейки памяти."
            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
            Text="          Указатели используются для передачи по ссылке данных, что ускоряет процесс их обработки (особенно при большом объёме). Также они применяются для организации динамического распределения памяти."
            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
            Text="          Перед использованием указатель необходимо объявить, как и любую переменную. Перед именем ставится символ звёздочки *."
            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
            Text="        	Чтобы получить значение, записанное в некоторой области, на которое ссылается указатель, нужно воспользоваться операцией разыменования указателя *."	                                        
            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>                        
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/pointers.png" Width="533" Height="300" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="5">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
            Text="        	Рисунок 2. Указатели."	                                        
            TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="5">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="№3" Width="50" FontFamily="Franklin Gothic Medium" Background="#FF00FF87" BorderBrush="Black" Cursor="Hand">
                <ScrollViewer Cursor="Arrow">
                    <StackPanel>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="20,0" FontSize="20" Grid.Row="1" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Типы данных в языках программирования. Типы данных в C++." Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                 Text="          Типы данных в языках программирования (ЯП) представляют собой способ классификации и организации данных, которые могут быть использованы в программе. Они не только определяют, какие виды данных могут быть хранены в переменных, но и указывают на операции, которые можно выполнять с этими данными. Типы данных в ЯП являются важной концепцией, поскольку они помогают программистам:"
                 TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                 Text="          1) Контролировать типы значений: Типы данных позволяют программистам контролировать типы значений, с которыми они работают, что обеспечивает безопасность и предотвращает нежелательные ошибки в программе."
                 TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                 Text="          2) Повышать эффективность выполнения программы, т.к правильный выбор типов данных может повысить эффективность выполнения программы, поскольку определенные типы данных могут быть более подходящими для определенных операций."
                 TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                 Text="        	 В C++ существует множество различных типов данных, каждый из которых предназначен для хранения определенного вида информации. Некоторые из основных типов данных в C++ включают целочисленные типы (int, short, long), типы с плавающей запятой (float, double), символьные типы (char), логический тип (bool) и другие. Типы данных в C++ не только определяют, какие виды данных могут быть хранены в переменных, но и указывают на операции, которые можно выполнять с этими данными."	                                        
                 TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/cppCode.png" Width="500" Height="410" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="5">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
                 Text="        	Рисунок 3. Листинг кода C++ с переменными"	                                        
                 TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="5">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="№4" Width="50" FontFamily="Franklin Gothic Medium" Background="#FF00FF87" BorderBrush="Black" Cursor="Hand">
                <ScrollViewer Cursor="Arrow">
                    <StackPanel>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="20,0" FontSize="20" Grid.Row="1" 
                   TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Ввод - вывод данных (cin, cout)" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                 Text="          В C++ ввод и вывод данных осуществляются с использованием потоков. Для вывода данных используется поток вывода (output stream), который обозначается как cout, а для ввода данных - поток ввода (input stream), обозначаемый как cin. Для работы с потоками ввода-вывода необходимо подключить заголовочный файл iostream."
                 TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                 Text="          Пример ввода данных в C++ с использованием cin:"
                 TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/cinCode.png" Width="573" Height="240" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
                Text="        	Рисунок 4. Листинг кода C++ с вводом данных"	                                        
                TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                Text="         	Пример вывода данных в C++ с использованием cout:"
                TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium"  Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/coutCode.png" Width="593" Height="170" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
                 Text="        	Рисунок 5. Листинг кода C++ с выводом данных"	                                        
                 TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium"  Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="№5" Width="50" FontFamily="Franklin Gothic Medium" Background="#FF00FF87" BorderBrush="Black" Cursor="Hand">
                <ScrollViewer Cursor="Arrow">
                    <StackPanel>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="20,0" FontSize="20" Grid.Row="1" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Условные конструкции (if, else)" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                 Text="          Условные конструкции в C++ позволяют программе принимать решения на основе определенных условий. В языке C++ существует лишь два условных оператора: if и else, однако их комбинации позволяют производить достаточно сложные ветвления, такие как if-else или if-else-if-else:"
                 TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/ifCode.png" Width="533" Height="240" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
                Text="        	Рисунок 6. Листинг кода C++ с оператором If"	                                        
                TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/ifElseCode.png" Width="533" Height="300" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
                Text="        	Рисунок 7. Листинг кода C++ с операторами If - Else"	                                        
                TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/IfElseIfElseCode.png" Width="533" Height="370" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
                Text="        	Рисунок 8. Листинг кода C++ с операторами If - Else - If - Else"	                                        
                TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="№6" Width="50" FontFamily="Franklin Gothic Medium" Background="#FF00FF87" BorderBrush="Black" Cursor="Hand">
                <ScrollViewer Cursor="Arrow">
                    <StackPanel>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="20,0" FontSize="20" Grid.Row="1" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Конструкция switch-case" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
            Text="          Конструкция switch-case позволяет сравнить которое выражение с набором значений. После ключегового слова switch в скобках идёт сравниваемое выражение. Значение этого выражения последовательно сравнивается со значениями после оператора case. И если совпадение будет найдено, то будет выполняться определённый case. Конструкция имеет следующий вид:"
            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/switch-case.png" Width="533" Height="670" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
            Text="        	Рисунок 9. Листинг кода C++ с оператором switch-case"	                                        
            TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="№7" Width="50" FontFamily="Franklin Gothic Medium" Background="#FF00FF87" BorderBrush="Black" Cursor="Hand">
                <ScrollViewer Cursor="Arrow">
                    <StackPanel>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="20,0" FontSize="20" Grid.Row="1" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Циклические нструкции (for, while)" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
            Text="          Циклы являются управляющими конструкциями, которые позволяют взависимости от определённых условий повторять определённое количество раз указанные в них действия. В C++ имеется четыре вида циклов: for, while, do-while и range-based for. На данном курсе пойдёт речь о первых двух: for и while."
            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
            Text="          Цикл for - это вид цикла, предназначенный для алгоритмов, в которых имеется необходимость в определённом количестве повторений (10, 20, 1000 и пр.) Синтаксис цикла состоит из заголовка for (итерационная переменная; условие повторения цикла; действия над итерационной переменной) и тела цикла, т.е. всё написанное в фигурных скобках."
            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/for_loop.png" Width="500" Height="115" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
            Text="        	Рисунок 10. Листинг кода C++ с циклической конструкцией for"	                                        
            TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
            Text="          В отличие от цикла for, в while нет синтаксиса для выделения лимитов повторения цикла, имеется лишь условие повторения. По сути, цикл while представляет из себя тот же условный оператор if, только в отличие от оного, он выполняется не один раз, а до тех пор, пока верно условие. Соответственно, синтаксис цикла состоит из заголовка с условием и тела цикла."
            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/while_loop.png" Width="600" Height="175" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
            Text="        	Рисунок 11. Листинг кода C++ с циклической конструкцией while"	                                        
            TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Конец" Width="50" FontFamily="Franklin Gothic Medium" Background="#FF00FF87" BorderBrush="Black" Cursor="Hand">
                <StackPanel VerticalAlignment="Center">
                    <RibbonSeparator Height="10" Cursor="Arrow">
                        <RibbonSeparator.OpacityMask>
                            <SolidColorBrush Color="Black" Opacity="0"/>
                        </RibbonSeparator.OpacityMask>
                    </RibbonSeparator>
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="20,0" FontSize="25" Grid.Row="1" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Финиш" Foreground="White" Cursor="Arrow"/>
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="20,0" FontSize="24" Grid.Row="1" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Нажмите на кнопку ниже, когда дочитаете весь материал. Дальше будет тест ваших знаний." Foreground="White" TextAlignment="Center" Cursor="Arrow"/>
                    <RibbonSeparator Height="10" Cursor="Arrow">
                        <RibbonSeparator.OpacityMask>
                            <SolidColorBrush Color="Black" Opacity="0"/>
                        </RibbonSeparator.OpacityMask>
                    </RibbonSeparator>
                    <Button Content="Перейти к тесту" Height="35" Width="180" FontSize="20"
    FontFamily="Franklin Gothic Medium" Background="Black" Foreground="White" Click="Continue_Click" Cursor="Hand">
                        <Button.BorderBrush>
                            <SolidColorBrush Color="#FF707070" Opacity="0"/>
                        </Button.BorderBrush>
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="5"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                </StackPanel>
            </TabItem>
        </TabControl>
    </Grid>
</Page>

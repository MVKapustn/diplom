<Page x:Class="DiplomKapustinMaximISP_41.Pages.BaseCoursePg"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:DiplomKapustinMaximISP_41.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="BaseCoursePg" Initialized="Page_Initialized">
    <Grid>
        <Frame Grid.RowSpan="3">
            <Frame.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <LinearGradientBrush.RelativeTransform>
                        <TransformGroup>
                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                            <SkewTransform CenterX="0.5" CenterY="0.5"/>
                            <RotateTransform Angle="-45" CenterX="0.5" CenterY="0.5"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </LinearGradientBrush.RelativeTransform>
                    <GradientStop Color="#FF00D1FF" Offset="1"/>
                    <GradientStop Color="#FF00FF87" Offset="0"/>
                </LinearGradientBrush>
            </Frame.Background>
        </Frame>
        <TabControl x:Name="tabControlMed" Width="770" HorizontalAlignment="Center" Visibility="Visible" IsEnabled="False" FontFamily="Franklin Gothic Medium" Foreground="Black" BorderBrush="Black" Cursor="Arrow" Margin="0,10,0,10">
            <TabControl.Background>
                <SolidColorBrush Color="#FF00CC6C" Opacity="0.5"/>
            </TabControl.Background>
            <TabItem Header="О курсе" Width="70" FontFamily="Franklin Gothic Medium" Background="#FF00FF87" BorderBrush="Black" Cursor="Hand">
                <ScrollViewer Cursor="Arrow">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock VerticalAlignment="Center" Margin="20,10,0,0" FontSize="25" Text="Для вашего уровня владения языком будет преложено пройти следующий план изучения языка C++:" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="20" Grid.Row="1" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Foreground="White"><Run Language="ru-ru" Text="1) Ввведение в массивы."/></TextBlock>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="20" Grid.Row="2" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Foreground="White"><Run Language="ru-ru" Text="2) Указатели."/></TextBlock>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="20" Grid.Row="3" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Foreground="White"><Run Language="ru-ru" Text="3) Продвинутые циклы (range-based for, do-while)."/></TextBlock>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="20" Grid.Row="4" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Foreground="White"><Run Language="ru-ru" Text="4) Контейнер vector."/></TextBlock>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="20" Grid.Row="5" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Foreground="White"><Run Language="ru-ru" Text="5) Написание собственных функций."/></TextBlock>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="20" Grid.Row="6" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Foreground="White"><Run Language="ru-ru" Text="6) Перечисления и объединения (enum, union)."/></TextBlock>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="20" Grid.Row="7" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Foreground="White"><Run Language="ru-ru" Text="7) Ключевое слово return, необязательные параметры функций."/></TextBlock>
                    </Grid>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="№1" Width="50" FontFamily="Franklin Gothic Medium" Background="#FF00FF87" BorderBrush="Black" Cursor="Hand">
                <ScrollViewer Cursor="Arrow">
                    <StackPanel>
                        <RibbonSeparator Height="20">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="20,0" FontSize="20" Grid.Row="1" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Ввведение в массивы." Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="        Массивы представляют собой структуру данных, которая позволяет хранить набор элементов одного типа под одним именем. Они широко используются в программировании для организации и управления данными."
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="        Назначение массивов:"
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="        1) Массивы позволяют хранить множество элементов одного типа под одним именем, что облегчает доступ к данным и их обработку;"
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="        2) Могут быть использованы для хранения данных различных типов, таких как числа, строки, объекты и другие массивы."
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="        3) Массивы обеспечивают удобный доступ к элементам по их индексам, что позволяет эффективно управлять данными."
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="20">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/arrays.png" Width="553" Height="250" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="5">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
                            Text="        	Рисунок 1. Массивы в C++."	                                        
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium"  Foreground="White"/>
                        <RibbonSeparator Height="5">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="№2" Width="50" FontFamily="Franklin Gothic Medium" Background="#FF00FF87" BorderBrush="Black" Cursor="Hand">
                <ScrollViewer Cursor="Arrow">
                    <StackPanel>
                        <RibbonSeparator Height="20">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="20,0" FontSize="20" Grid.Row="1"
                            TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Указатели."  Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="          Указатель в C++ — это переменная, значением которой является адрес ячейки памяти."
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="          Указатели используются для передачи по ссылке данных, что ускоряет процесс их обработки (особенно при большом объёме). Также они применяются для организации динамического распределения памяти."
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="          Перед использованием указатель необходимо объявить, как и любую переменную. Перед именем ставится символ звёздочки *."
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="        	Чтобы получить значение, записанное в некоторой области, на которое ссылается указатель, нужно воспользоваться операцией разыменования указателя *."	                                        
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>                        
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/pointers.png" Width="553" Height="330" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="5">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
                            Text="        	Рисунок 2. Указатели."	                                        
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="5">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="№3" Width="50" FontFamily="Franklin Gothic Medium" Background="#FF00FF87" BorderBrush="Black" Cursor="Hand">
                <ScrollViewer Cursor="Arrow">
                    <StackPanel>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="20,0" FontSize="20" Grid.Row="1" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Продвинутые циклы (range-based for)." Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="          Range-based for loop — это новая функция в языке C++, которая была введена в версии C++ 11. Она обеспечивает простой и удобный синтаксис для работы с циклом for по сравнению с традиционным длинным синтаксисом."
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="          Преимущества:"
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="          1) Не требуется вычислять размер или длину массива или коллекции, цикл автоматически обрабатывает это;"
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="        	2) Не нужно указывать условие прекращения цикла и операции increment или decrement в синтаксисе цикла."	                                        
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/range-based_for.png" Width="580" Height="350" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="5">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
                             Text="        	Рисунок 3. Основанное на диапазоне выражение for."	                                        
                             TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="5">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="20,0" FontSize="20" Grid.Row="1" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Продвинутые циклы (do-while)." Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="          В цикле do-while сначала выполняется код цикла, а потом происходит проверка условия в инструкции while. И пока это условие истинно, то есть не равно 0, то цикл повторяется."
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="          Но важно отметить, что цикл do гарантирует хотя бы однократное выполнение действий, даже если условие в инструкции while не будет истинно."
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/do-while.png" Width="560" Height="300" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="5">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
                            Text="        	Рисунок 4. Циклическая конструкция do-while."	                                        
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="5">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="№4" Width="50" FontFamily="Franklin Gothic Medium" Background="#FF00FF87" BorderBrush="Black" Cursor="Hand">
                <ScrollViewer Cursor="Arrow">
                    <StackPanel>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="20,0" FontSize="20" Grid.Row="1" 
                            TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Контейнер vector." Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="          В стандартной библиотеке C++ вектором (std::vector) называется динамический массив, обеспечивающий быстрое добавление новых элементов в конец и меняющий свой размер при необходимости. Также вектор гарантирует отсутствие утечек памяти."
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="          Элементы вектора должны быть одинакового типа, и этот тип должен быть известен при компиляции программы. Он задаётся в угловых скобках после std::vector"
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="          Само имя std::vector не является типом данных: это шаблон, в который требуется подставить нужные параметры (тип элемента), чтобы получился конкретный тип данных. Подробнее о том, что такое шаблоны и как их применять, мы узнаем на курсе для сложности (Я профессионал)."
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/vector.png" Width="490" Height="410" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
                            Text="        	Рисунок 5. Контейнер vector."	                                        
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>                        
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="№5" Width="50" FontFamily="Franklin Gothic Medium" Background="#FF00FF87" BorderBrush="Black" Cursor="Hand">
                <ScrollViewer Cursor="Arrow">
                    <StackPanel>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="20,0" FontSize="20" Grid.Row="1" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Написание собственных функций." Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="          Функция в языке C++ - это по сути группа операторов, которые объединены вместе и выполняют какую-то определённую задачу. Функция всегда имеет имя и опционально может иметь входные параметры. Также для функции всегда задаётся тип возвращаемого значения - это тип данных для того результата вычислений, который функция в буквальном смысле возвращает после выполнения группы входящих в неё операторов."
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/functions.png" Width="580" Height="470" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
                            Text="        	Рисунок 6. Код описания функции."	                                        
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>                        
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="№6" Width="50" FontFamily="Franklin Gothic Medium" Background="#FF00FF87" BorderBrush="Black" Cursor="Hand">
                <ScrollViewer Cursor="Arrow">
                    <StackPanel>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="20,0" FontSize="20" Grid.Row="1" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Перечисления и объединения (enum)." Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="          Перечисление (Enumerated type) - это определяемый пользователем тип данных, которому могут быть присвоены некоторые ограниченные значения. Эти значения определяются программистом во время объявления перечисляемого типа."
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="          Ключевое слово enum используется для объявления перечисляемых типов, после чего записывается имя перечисляемого типа, а затем в фигурных скобках определяются возможные значения. После определения перечисляемого типа создаются переменные. "
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/enum1.png" Width="620" Height="670" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
                            Text="        	Рисунок 7. Перечисление в С++"	                                        
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="20,0" FontSize="20" Grid.Row="1" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Перечисления и объединения (union)." Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="          В C++ объединение - это определяемый пользователем тип данных, в котором мы можем определять элементы различных типов данных точно так же, как структуры. Но от структур union отличается тем, что переменные-члены в union используют одну и ту же ячейку памяти, в отличие от структуры, которая выделяет память отдельно для каждой переменной-члена. Размер union равен размеру самого большого типа данных."
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="          Пространство памяти может использоваться одной переменной-членом в определенный момент времени, что означает, что если мы присвоим значение одной переменной-члену, это автоматически освободит другую переменную-член, хранящуюся в памяти, что приведет к потере данных."
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/union.png" Width="533" Height="300" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
                            Text="        	Рисунок 8. Объединение в С++"	                                        
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="№7" Width="50" FontFamily="Franklin Gothic Medium" Background="#FF00FF87" BorderBrush="Black" Cursor="Hand">
                <ScrollViewer Cursor="Arrow">
                    <StackPanel>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="20,0" FontSize="20" Grid.Row="1" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Ключевое слово return." Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="          Ключевое слово return завершает выполнение текущей функции и возвращает управление вызывающей функции. Ключевое слово return используется в случае функций возвращаемого типа, таких как int, char, float и т.д. Использование инструкции return в функции main() успешно завершает работу программы, так как нет необходимости в передаче управления."
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>                        
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/return.png" Width="530" Height="545" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
                            Text="        	Рисунок 9. Оператор возврата значения return."	                                        
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="20,0" FontSize="20" Grid.Row="1" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Необязательные параметры функций." Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="14" 
                            Text="          В C++ существует возможность определения функций с необязательными параметрами. Это позволяет вызывать функцию как с заданными значениями параметров, так и без них."
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <Image Source="/Images/parameters.png" Width="500" Height="475" HorizontalAlignment="Center" Stretch="Fill"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                        <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="18" 
                            Text="        	Рисунок 10. Пример кода с необязательным параметром."	                                        
                            TextWrapping="WrapWithOverflow" TextAlignment="Justify" HorizontalAlignment="Center" FontFamily="Franklin Gothic Medium" Foreground="White"/>
                        <RibbonSeparator Height="10">
                            <RibbonSeparator.OpacityMask>
                                <SolidColorBrush Color="Black" Opacity="0"/>
                            </RibbonSeparator.OpacityMask>
                        </RibbonSeparator>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Конец" Width="50" FontFamily="Franklin Gothic Medium" Background="#FF00FF87" BorderBrush="Black" Cursor="Hand">
                <StackPanel VerticalAlignment="Center">
                    <RibbonSeparator Height="10" Cursor="Arrow">
                        <RibbonSeparator.OpacityMask>
                            <SolidColorBrush Color="Black" Opacity="0"/>
                        </RibbonSeparator.OpacityMask>
                    </RibbonSeparator>
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="20,0" FontSize="25" Grid.Row="1" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Финиш" Foreground="White" Cursor="Arrow"/>
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="20,0" FontSize="24" Grid.Row="1" TextWrapping="WrapWithOverflow" FontFamily="Franklin Gothic Medium" Text="Нажмите на кнопку ниже, когда дочитаете весь материал. Дальше будет тест ваших знаний." Foreground="White" TextAlignment="Center" Cursor="Arrow"/>
                    <RibbonSeparator Height="10" Cursor="Arrow">
                        <RibbonSeparator.OpacityMask>
                            <SolidColorBrush Color="Black" Opacity="0"/>
                        </RibbonSeparator.OpacityMask>
                    </RibbonSeparator>
                    <Button Content="Перейти к тесту" Height="35" Width="180" FontSize="20"
    FontFamily="Franklin Gothic Medium" Background="Black" Foreground="White" Click="Continue_Click" Cursor="Hand">
                        <Button.BorderBrush>
                            <SolidColorBrush Color="#FF707070" Opacity="0"/>
                        </Button.BorderBrush>
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="5"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                </StackPanel>
            </TabItem>
        </TabControl>
    </Grid>
</Page>
